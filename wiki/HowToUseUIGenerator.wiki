#summary this page demonstrate how to use ui generator

= Introduction =

  This demo show how to use domain object and doc annotation create a full function dialog.


= Create domain object =

{{{
/**
 * @List teamID teamName teamDesc
 * @Caption Team Information
 * 
 * @author James Luo
 * 2008-1-1 01:53:26 pm
 *
 */
public class Team implements Reflection, IsSerializable {
	/**
	 * @Caption "TeamID"
	 * @Desc getTeamIDDesc
	 * @Validate NotNull StrLength>6 StrLength<19 teamIDValidate
	 */
	private String teamID;
	/**
	 * @Caption "Team Name"
	 */
	private String teamName;
	/**
	 * @Caption "Team Description"
	 */
	private String teamDesc;
	
	
	public String getTeamDesc() {
		return teamDesc;
	}
	public void setTeamDesc(String teamDesc) {
		this.teamDesc = teamDesc;
	}
	
	public void teamIDValidate(Object value){
		if (((String)value).equals("AABB")){
			throw new ValidateException("TeamID not named AABB");
		}else{
			//OK
		}
	}
	
	protected String getTeamIDDesc(){
		return AppMsgFactory.getInstance().TeamIDDesc();
	}
	
	public String getTeamID() {
		return teamID;
	}
	public void setTeamID(String teamID) {
		this.teamID = teamID;
	}
	public String getTeamName() {
		return teamName;
	}
	public void setTeamName(String teamName) {
		this.teamName = teamName;
	}
}
}}}


= Generate UI =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages